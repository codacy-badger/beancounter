version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5

executors:
  java-build:
    environment:
      _JAVA_OPTIONS: "-Xms256m -Xmx512m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"

    docker:
      - image: circleci/openjdk:11
jobs:
  build-app:
    docker:
      - image: circleci/node
    environment:
      IMAGE_NAME: bc-app
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "./bc-view/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: cd ./bc-view && pwd && yarn install --frozen-lockfile
      - run:
          name: Test with coverage
          command: cd ./bc-view && yarn test --ci --coverage --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "./reports/junit"
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-cache-{{ checksum "~/project/bc-view/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./bc-view/node_modules
      - store_test_results:
          path: bc-view/reports/junit
      - store_artifacts:
          path: bc-view/reports/junit
      - setup_remote_docker
      - run:
          name: Package BC-VIEW
          command: |
            docker build ~/project/bc-view/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-app.tar

  build-common:
    executor: java-build
    environment:
      IMAGE_NAME: bc-data

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-build-cache-{{ checksum "~/project/jar-common/build.gradle" }}-{{ checksum "~/project/svc-data/build.gradle" }}-{{ checksum "~/project/jar-shell/build.gradle" }}-{{ checksum "~/project/svc-position/build.gradle" }}
      - run: 'pwd'
      - run: './gradlew jar-common:build jar-auth:build svc-data:build'
      - run: './gradlew svc-data:publishToMavenLocal'
      - setup_remote_docker
      - run:
          name: Package BC-DATA
          command: |
            docker build ~/project/svc-data/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-data.tar

      - store_test_results:
          path: ~/project/svc-data/build/test-results/test

      - codecov/upload:
          file: ~/project/svc-data/build/reports/jacoco/test/*.xml

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-build-cache-{{ checksum "~/project/jar-common/build.gradle" }}-{{ checksum "~/project/svc-data/build.gradle" }}-{{ checksum "~/project/jar-shell/build.gradle" }}-{{ checksum "~/project/svc-position/build.gradle" }}

      - save_cache:
          paths:
            - ~/.m2
            - ~/.gradle
            - ~/project

          key: v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}

      - store_artifacts:
          path: ~/project/svc-data/build/libs

      - store_artifacts:
          path: ~/project/jar-common/build/libs

  build-client:
    executor: java-build
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3c:d5:17:fb:41:7c:f2:b1:fe:cd:e4:75:99:34:2e:e2"
      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}

      - run: './gradlew jar-client:build'

      - store_test_results:
          path: ~/project/jar-client/build/test-results/test

      - codecov/upload:
          file: ~/project/jar-client/build/reports/jacoco/test/*.xml

      - store_artifacts:
          path: ~/project/jar-client/build/libs

  build-shell:
    executor: java-build
    environment:
      IMAGE_NAME: bc-shell

    steps:
      - add_ssh_keys:
          fingerprints:
            - "3c:d5:17:fb:41:7c:f2:b1:fe:cd:e4:75:99:34:2e:e2"
      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}

      - run: './gradlew jar-shell:build'
      - setup_remote_docker
      - run:
          name: Package BC-SHELL
          command: |
            docker build ~/project/jar-shell/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-shell.tar

      - store_test_results:
          path: ~/project/jar-shell/build/test-results/test

      - codecov/upload:
          file: ~/project/jar-shell/build/reports/jacoco/test/*.xml

      - store_artifacts:
          path: ~/project/jar-shell/build/libs

  build-position:
    executor: java-build
    environment:
      IMAGE_NAME: bc-position
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3c:d5:17:fb:41:7c:f2:b1:fe:cd:e4:75:99:34:2e:e2"

      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: './gradlew svc-position:build'
      - setup_remote_docker
      - run:
          name: Package BC-POSITION
          command: |
            docker build ~/project/svc-position/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-position.tar
      - store_test_results:
          path: ~/project/svc-position/build/test-results/test
      - codecov/upload:
          file: ~/project/svc-position/build/reports/jacoco/test/*.xml
      - store_artifacts:
          path: ~/project/svc-position/build/libs

  docker-publish:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      BC_POSITION: monowai/bc-position
      BC_DATA: monowai/bc-data
      BC_APP: monowai/bc-app
      BC_SHELL: monowai/bc-shell

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Publish POSITION
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            ls /tmp/workspace
            test -f /tmp/workspace/bc-position.tar &&
                docker load -i /tmp/workspace/bc-position.tar &&
                docker push $BC_POSITION

      - run:
          name: Publish DATA
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            test -f /tmp/workspace/bc-data.tar &&
                docker load -i /tmp/workspace/bc-data.tar &&
                docker push $BC_DATA

      - run:
          name: Publish APP
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            test -f /tmp/workspace/bc-app.tar &&
                docker load -i /tmp/workspace/bc-app.tar &&
                docker push $BC_APP

      - run:
          name: Publish SHELL
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            test -f /tmp/workspace/bc-shell.tar &&
                docker load -i /tmp/workspace/bc-shell.tar &&
                docker push $BC_SHELL

workflows:
  version: 2
  build_and_stage:
    jobs:
      - build-app
      - build-common
      - build-client:
          requires:
            - build-common
      - build-shell:
          requires:
            - build-common
            - build-client
      - build-position:
          requires:
            - build-common
            - build-client
      - docker-publish:
          filters:
            branches:
              only: master
          requires:
            - build-common
            - build-shell
            - build-position
            - build-app