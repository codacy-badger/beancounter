server:
  port: 9501
  servlet:
    context-path: '/api'


spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "${auth.uri}/realms/${auth.realm}/protocol/openid-connect/certs"
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.beancounter.common.input
      group-id: bcIngestion

auth:
  uri: "http://keycloak:9620/auth"
  realm: "bc-dev"
  client: "bc-dev"
  user: mike@monowai.com
  pass: password

feign:
  client:
    config:
      default:
        errorDecoder: com.beancounter.common.exception.SpringFeignDecoder

resilience4j:
  retry:
    configs:
      default:
        maxRetryAttempts: 10
        waitDuration: 700
        ignoreExceptions:
          - com.beancounter.common.exception.BusinessException
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException

  circuitbreaker:
    configs:
      default:
        failureRateThreshold: 3
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        waitDurationInOpenState: 5s
        registerHealthIndicator: true
        recordFailurePredicate: com.beancounter.common.exception.RecordFailurePredicate

logging:
  level:
    root: debug
    javax: error
    sun: error
    io: error
    feign: fatal
    com:
      netfix: error
      beancounter: debug
      zaxxer: error
    org:
      springframework: error
      apache: error
